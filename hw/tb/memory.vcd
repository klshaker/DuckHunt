$version Generated by VerilatedVcd $end
$date Sun Apr 10 00:43:53 2022
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  4 5 addr [3:0] $end
  $var wire  1 3 clk $end
  $var wire 16 6 data_in [15:0] $end
  $var wire 16 7 data_out [15:0] $end
  $var wire  1 4 we $end
  $scope module memory $end
   $var wire 32 9 ADDR_BITS [31:0] $end
   $var wire 32 8 NUM_WORDS [31:0] $end
   $var wire 32 8 WORD_SIZE [31:0] $end
   $var wire  4 5 addr [3:0] $end
   $var wire  1 3 clk $end
   $var wire 16 6 data_in [15:0] $end
   $var wire 16 7 data_out [15:0] $end
   $var wire 16 # mem(0) [15:0] $end
   $var wire 16 $ mem(1) [15:0] $end
   $var wire 16 - mem(10) [15:0] $end
   $var wire 16 . mem(11) [15:0] $end
   $var wire 16 / mem(12) [15:0] $end
   $var wire 16 0 mem(13) [15:0] $end
   $var wire 16 1 mem(14) [15:0] $end
   $var wire 16 2 mem(15) [15:0] $end
   $var wire 16 % mem(2) [15:0] $end
   $var wire 16 & mem(3) [15:0] $end
   $var wire 16 ' mem(4) [15:0] $end
   $var wire 16 ( mem(5) [15:0] $end
   $var wire 16 ) mem(6) [15:0] $end
   $var wire 16 * mem(7) [15:0] $end
   $var wire 16 + mem(8) [15:0] $end
   $var wire 16 , mem(9) [15:0] $end
   $var wire  1 4 we $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#10
b0000000000000000 #
b0000000000000000 $
b0000000000000000 %
b0000000000000000 &
b0000000000000000 '
b0000000000000000 (
b0000000000000000 )
b0000000000000000 *
b0000000000000000 +
b0000000000000000 ,
b0000000000000000 -
b0000000000000000 .
b0000000000000000 /
b0000000000000000 0
b0000000000000000 1
b0000000000000000 2
03
14
b0000 5
b0000000000000000 6
b0000000000000000 7
b00000000000000000000000000010000 8
b00000000000000000000000000000100 9
#20
13
#30
03
b0001 5
b0000000000000001 6
#40
b0000000000000001 $
13
#50
03
b0010 5
b0000000000000010 6
#60
b0000000000000010 %
13
#70
03
b0011 5
b0000000000000011 6
#80
b0000000000000011 &
13
#90
03
b0100 5
b0000000000000100 6
#100
b0000000000000100 '
13
#110
03
b0101 5
b0000000000000101 6
#120
b0000000000000101 (
13
#130
03
b0110 5
b0000000000000110 6
#140
b0000000000000110 )
13
#150
03
b0111 5
b0000000000000111 6
#160
b0000000000000111 *
13
#170
03
b1000 5
b0000000000001000 6
#180
b0000000000001000 +
13
#190
03
b1001 5
b0000000000001001 6
#200
b0000000000001001 ,
13
#210
03
b1010 5
b0000000000001010 6
#220
b0000000000001010 -
13
#230
03
b1011 5
b0000000000001011 6
#240
b0000000000001011 .
13
#250
03
b1100 5
b0000000000001100 6
#260
b0000000000001100 /
13
#270
03
b1101 5
b0000000000001101 6
#280
b0000000000001101 0
13
#290
03
b1110 5
b0000000000001110 6
#300
b0000000000001110 1
13
#310
03
b1111 5
b0000000000001111 6
#320
b0000000000001111 2
13
#330
03
04
b0000 5
#340
13
#350
03
b0001 5
#360
13
b0000000000000001 7
#370
03
b0010 5
#380
13
b0000000000000010 7
#390
03
b0011 5
#400
13
b0000000000000011 7
#410
03
b0100 5
#420
13
b0000000000000100 7
#430
03
b0101 5
#440
13
b0000000000000101 7
#450
03
b0110 5
#460
13
b0000000000000110 7
#470
03
b0111 5
#480
13
b0000000000000111 7
#490
03
b1000 5
#500
13
b0000000000001000 7
#510
03
b1001 5
#520
13
b0000000000001001 7
#530
03
b1010 5
#540
13
b0000000000001010 7
#550
03
b1011 5
#560
13
b0000000000001011 7
#570
03
b1100 5
#580
13
b0000000000001100 7
#590
03
b1101 5
#600
13
b0000000000001101 7
#610
03
b1110 5
#620
13
b0000000000001110 7
#630
03
b1111 5
#640
13
b0000000000001111 7
